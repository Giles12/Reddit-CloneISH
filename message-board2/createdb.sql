-- create tables needed for messageBoard
CREATE DATABASE IF NOT EXISTS messageBoard;

USE messageBoard;

CREATE TABLE MB_USER (
    User_Name VARCHAR(50) PRIMARY KEY,
    User_Password VARCHAR(50),
    Join_Date DATE
);

CREATE TABLE COMMUNITY (
    Community_Name VARCHAR(50) PRIMARY KEY
);

CREATE TABLE POST (
    Post_ID INT AUTO_INCREMENT PRIMARY KEY,
    Content VARCHAR(250),
    Title VARCHAR(250) NOT NULL
);

CREATE TABLE CREATE_POST (
    User_Name VARCHAR(50),
    Post_ID INT,
    PRIMARY KEY (User_Name, Post_ID),
    FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE COMMENTS (
    Content_ID INT AUTO_INCREMENT PRIMARY KEY,
    Content VARCHAR(250)
);

CREATE TABLE CREATE_COMMENT (
    User_Name VARCHAR(50),
    Content_ID INT,
    PRIMARY KEY(User_Name, Content_ID),
    FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Content_ID) REFERENCES COMMENTS(Content_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MB_SESSION (
    SID INT AUTO_INCREMENT,
    User_Name VARCHAR(50),
    PRIMARY KEY(SID, User_Name),
    FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
    s_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    e_time TIMESTAMP
);


-- relationship tables
CREATE TABLE COMMUNITY_MEMBERS (
     User_Name VARCHAR(50),
     Community_Name VARCHAR(50),
     PRIMARY KEY(User_Name, Community_Name),
     FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
     FOREIGN KEY(Community_Name) REFERENCES COMMUNITY(Community_Name) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE COMMUNITY_MODERATOR (
     User_Name VARCHAR(50),
     Community_Name VARCHAR(50),
     PRIMARY KEY(User_Name, Community_Name),
     FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
     FOREIGN KEY(Community_Name) REFERENCES COMMUNITY(Community_Name) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE POST_VOTES (
     User_Name VARCHAR(50),
     VoteType INT,
     Post_ID INT PRIMARY KEY,
     FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
     FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE POST_COMMENTS (
    Post_ID INT NOT NULL,
    Content_ID INT,
    PRIMARY KEY(Post_ID, Content_ID),
    FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Content_ID) REFERENCES COMMENTS(Content_ID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE COMMUNITY_POSTS (
    Post_ID INT PRIMARY KEY,
    Community_Name VARCHAR(50),
    FOREIGN KEY(Community_Name) REFERENCES COMMUNITY(Community_Name) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE USER_FRONT_PAGE (
    User_Name VARCHAR(50),
    Community_Name VARCHAR(50),
    PRIMARY KEY (User_Name, Community_Name),
    FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Community_Name) REFERENCES COMMUNITY(Community_Name) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE COMMENT_VOTES (
     User_Name VARCHAR(50),
     VoteType INT,
     Content_ID INT PRIMARY KEY,
     FOREIGN KEY(User_Name) REFERENCES MB_USER(User_Name) ON DELETE CASCADE ON UPDATE CASCADE,
     FOREIGN KEY(Content_ID) REFERENCES COMMENTS(Content_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE POST_FLAIR (
    FLAIR_ID INT AUTO_INCREMENT PRIMARY KEY,
    Post_ID INT,
    Flair_Name VARCHAR(50),
    FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



